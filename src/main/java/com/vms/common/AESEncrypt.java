package com.vms.common;
import java.util.Base64;

import javax.crypto.Cipher;
import javax.crypto.spec.SecretKeySpec;
 
public class AESEncrypt {
 
    public static String encryptFile(String inputParam , String key) {
        try{
		    byte[] abyte2 = (byte[]) null;
		    byte[] abyte1 = key.getBytes();
		    SecretKeySpec secretkeyspec = new SecretKeySpec(abyte1, "AES");
		    SecretKeySpec secretkeyspec1 = secretkeyspec;
		    Cipher cipher = Cipher.getInstance("AES/ECB/PKCS5Padding");
		    cipher.init(Cipher.ENCRYPT_MODE, secretkeyspec1);
		    abyte2 = cipher.doFinal(inputParam.getBytes());
		    Base64.Encoder encoder = Base64.getMimeEncoder();
		    String ur_enc_str = encoder.encodeToString(abyte2);
		    return ur_enc_str;
        }
		catch (Exception e) 
        {
            System.out.println("Error while encrypting: " + e.toString());
            return e.toString();
        }
	}
    
    public static String decryptFile(String inputParam , String key) {
        try{
		    byte[] abyte1 = key.getBytes();
		    SecretKeySpec secretkeyspec = new SecretKeySpec(abyte1, "AES");
		    SecretKeySpec secretkeyspec1 = secretkeyspec;
		    Cipher cipher = Cipher.getInstance("AES/ECB/PKCS5Padding");
		    cipher.init(Cipher.DECRYPT_MODE, secretkeyspec1);
	        return new String(cipher.doFinal(Base64.getDecoder().decode(inputParam)));
        }
		catch (Exception e) 
        {
            System.out.println("Error while decrypting: " + e.toString());
            return e.toString();
        }
	}    

    public static void main(String[] args) 
    {
        String secretKey = "3272382267001000";
        String MerchantID = "323585";
        String returnurl = "http://schoolerp.biz/pgnew/response";		// Path to the response page


        String refno = "Test001";		// Unique Transaction ID generated by Merchant
        String SubID = "123";			// Numeric Sub Merchcant ID - If no numeric code exists use a default value
        String Amt = "100";			// Transaction Amount

        String Name = "Test Name";		// Sample custom field
        String Cls = "Fifth";			// Sample custom field
        String Section = "C";			// Sample custom field
        String Admno = "410249";		// Sample custom field

        String Paymode = "9";			// Pay mode 9 for showing all payment options

        String MdtFld = refno + "|" + SubID + "|" + Amt + "|" + Name + "|" + Cls + "|" + Section + "|" + Admno;
        String OptFld = "";
        
        String originalURL = "https://eazypay.icicibank.com/EazyPG?merchantid=" + MerchantID + "&mandatory%20fields=" + MdtFld + "&optional%20fields=" + OptFld + "&returnurl=" + returnurl + "&Reference%20No=" + refno +"&submerchantid=" + SubID + "&transaction%20amount=" + Amt  + "&paymode=" + Paymode;

        String EncryptedURL = "https://eazypay.icicibank.com/EazyPG?merchantid=" + MerchantID + "&mandatory%20fields=" + AESEncrypt.encryptFile(MdtFld,secretKey) + "&optional%20fields=" + AESEncrypt.encryptFile(OptFld,secretKey) + "&returnurl=" + AESEncrypt.encryptFile(returnurl,secretKey) + "&Reference%20No=" + AESEncrypt.encryptFile(refno,secretKey) +"&submerchantid=" + AESEncrypt.encryptFile(SubID,secretKey) + "&transaction%20amount=" + AESEncrypt.encryptFile(Amt,secretKey)  + "&paymode=" + AESEncrypt.encryptFile(Paymode,secretKey);


        String originalString = "9";
        String encryptedString = AESEncrypt.encryptFile(originalString,secretKey) ;
        
        System.out.println(originalURL);
        System.out.println(EncryptedURL); // Use the encrypted URL for redirection
  
    }
    
}
